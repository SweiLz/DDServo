/*
 ******************************************************************************
 * File    		eeprom0.h
 * Author  		wojtusch@sim.tu-darmstadt.de
 * Brief   		Header for eeprom emulation functions for system settings.
 * Peripherals
 ******************************************************************************
 */

// Define to prevent recursive inclusion
#ifndef __EEPROM0_H
#define __EEPROM0_H

// Includes
#include "stm32f10x.h"

// Defines
#define EEPROM0_START_ADDRESS 0x0801F800
#define EEPROM0_NUMBER_OF_VARIABLES 42
#define EEPROM0_MODEL_NUMBER 0x0000
#define EEPROM0_SERVO_ID 0x0001
#define EEPROM0_STATUS_RETURN_LEVEL 0x0002
#define EEPROM0_STATUS_RETURN_DELAY_TIME 0x0003
#define EEPROM0_BAUDRATE_DIVIDER 0x0004
#define EEPROM0_POSITION_OFFSET 0x0005
#define EEPROM0_POSITION_LIMIT_CLOCKWISE_LOW 0x0006
#define EEPROM0_POSITION_LIMIT_CLOCKWISE_HIGH 0x0007
#define EEPROM0_POSITION_LIMIT_COUNTERCLOCKWISE_LOW 0x0008
#define EEPROM0_POSITION_LIMIT_COUNTERCLOCKWISE_HIGH 0x0009
#define EEPROM0_TORQUE_LIMIT_LOW 0x000A
#define EEPROM0_TORQUE_LIMIT_HIGH 0x000B
#define EEPROM0_CURRENT_LIMIT_LOW 0x000C
#define EEPROM0_CURRENT_LIMIT_HIGH 0x000D
#define EEPROM0_VOLTAGE_LIMIT_LOW 0x000E
#define EEPROM0_VOLTAGE_LIMIT_HIGH 0x000F
#define EEPROM0_MOTOR_TEMPERATURE_LIMIT 0x0010
#define EEPROM0_CONTROLLER_TEMPERATURE_LIMIT 0x0011
#define EEPROM0_CONTROLLER_TEMPERATURE_OFFSET 0x0012
#define EEPROM0_STATUS_SIGNAL 0x0013
#define EEPROM0_ALARM_SIGNAL 0x0014
#define EEPROM0_ALARM_SHUTDOWN 0x0015
#define EEPROM0_SKIP_ZONE_PARAMETER_LOW 0x0016
#define EEPROM0_SKIP_ZONE_PARAMETER_HIGH 0x0017
#define EEPROM0_FEED_FORWARD_CONTROL_PARAMETER_LOW 0x0018
#define EEPROM0_FEED_FORWARD_CONTROL_PARAMETER_HIGH 0x0019
#define EEPROM0_PROPORTIONAL_POSITION_CONTROL_PARAMETER_LOW 0x001A
#define EEPROM0_PROPORTIONAL_POSITION_CONTROL_PARAMETER_HIGH 0x001B
#define EEPROM0_INTEGRAL_POSITION_CONTROL_PARAMETER_LOW 0x001C
#define EEPROM0_INTEGRAL_POSITION_CONTROL_PARAMETER_HIGH 0x001D
#define EEPROM0_DERIVATIVE_POSITION_CONTROL_PARAMETER_LOW 0x001E
#define EEPROM0_DERIVATIVE_POSITION_CONTROL_PARAMETER_HIGH 0x001F
#define EEPROM0_POSITION_COMPLIANCE_PARAMETER_LOW 0x0020
#define EEPROM0_POSITION_COMPLIANCE_PARAMETER_HIGH 0x0021
#define EEPROM0_PROPORTIONAL_SPEED_CONTROL_PARAMETER_LOW 0x0022
#define EEPROM0_PROPORTIONAL_SPEED_CONTROL_PARAMETER_HIGH 0x0023
#define EEPROM0_INTEGRAL_SPEED_CONTROL_PARAMETER_LOW 0x0024
#define EEPROM0_INTEGRAL_SPEED_CONTROL_PARAMETER_HIGH 0x0025
#define EEPROM0_DERIVATIVE_SPEED_CONTROL_PARAMETER_LOW 0x0026
#define EEPROM0_DERIVATIVE_SPEED_CONTROL_PARAMETER_HIGH 0x0027
#define EEPROM0_SPEED_COMPLIANCE_PARAMETER_LOW 0x0028
#define EEPROM0_SPEED_COMPLIANCE_PARAMETER_HIGH 0x0029
#define EEPROM0_PAGE_SIZE 0x400
#define EEPROM0_PAGE0_BASE_ADDRESS EEPROM0_START_ADDRESS
#define EEPROM0_PAGE0_END_ADDRESS (EEPROM0_START_ADDRESS + EEPROM0_PAGE_SIZE - 1)
#define EEPROM0_PAGE1_BASE_ADDRESS (EEPROM0_START_ADDRESS + EEPROM0_PAGE_SIZE)
#define EEPROM0_PAGE1_END_ADDRESS (EEPROM0_PAGE1_BASE_ADDRESS + EEPROM0_PAGE_SIZE - 1)
#define EEPROM0_PAGE0 0
#define EEPROM0_PAGE1 1

// Global function prototypes
void EEPROM0_Initalize(void);
uint8_t EEPROM0_GetStatus(void);
uint16_t EEPROM0_GetVariable(uint16_t);
void EEPROM0_SetVariable(uint16_t, uint16_t);

#endif
